version: "3.7"
services:
  frontend:
    image: docker.tgrep.nl/docker/node-10-stretch:latest
    # build:
    #   context: .
    #   dockerfile: docker/frontend.Dockerfile
    user: "$USER_ID:$GROUP_ID"
    volumes: [".:/app:cached"]
    expose: [1234, 8080]
    command: [npm, run, frontend-watch]
    working_dir: /app/frontend
    environment:
      NODE_ENV: development
      PARCEL_AUTOINSTALL: "false"
    ports: ["1234:1234", "8080:8080"]
    networks: [default]

  backend:
    image: docker.tgrep.nl/docker/node-10-stretch:latest
    # build:
    #   context: .
    #   dockerfile: docker/backend.Dockerfile
    depends_on: [psql]
    user: "$USER_ID:$GROUP_ID"
    volumes: [".:/app:cached"]
    expose: [3000]
    command: npm run start
    working_dir: /app/backend
    environment:
      TZ: Europe/Amsterdam
    networks: [default]

  psql:
    image: postgres:10
    environment:
      POSTGRES_USER: tg
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    ports: ["5432:5432"]
    networks: [default]

  nginx:
    image: nginx:1.14
    depends_on: [frontend, backend]
    volumes:
      - ".:/app:cached"
      - "./docker/nginx.conf:/etc/nginx/nginx.conf:ro"
      # - "./docker/certificates/server.pem:/etc/ssl/server.pem:ro"
      # - "./docker/certificates/server.key:/etc/ssl/server.key:ro"
      - "./docker/certificates/server.crt:/etc/ssl/server.crt:ro"
      - "./docker/certificates/key.pem:/etc/ssl/key.pem:ro"
    ports: ["127.0.0.1:443:443", "127.0.0.1:80:80"]
    logging:
      driver: none
    networks:
      default:
        aliases:
          - sab.test

networks:
  default: ~
